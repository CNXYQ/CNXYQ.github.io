<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Stay hungry. Stay Foolish.</title>
    <url>/2020/03/18/Stay-hungry-Stay-Foolish/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><div id="article_content" class="article_content clearfix"><link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-833878f763.css"><div id="content_views" class="markdown_views prism-atom-one-light"><svg xmlns="http://www.w3.org/2000/svg" style="display:none"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color:transparent"/></svg><p>Thank you. I am honored to be with you today at your commencement from one of the finest universities in the world. Truth be told, I never graduated from college. This is the closest I’ve ever gotten to a college graduation. Today I want to tell you three stories from my life. That’s it. No big deal. Just three stories.</p><p>很荣幸和大家一道参加这所世界上最好的一座大学的毕业典礼。我大学没毕业，说实话，这是我第一次离大学毕业典礼这么近。今天我想给大家讲三个我自己的故事，不讲别的，也不讲大道理，就讲三个故事。</p><p>The first story is about connecting the dots. I dropped out of Reed College after the first 6 months, but then stayed around as a drop-in for another 18 months or so before I really quit. So why did I drop out?</p><p>第一个故事讲的是点与点之间的关系。我在里德学院(Reed College)只读了六个月就退学了，此后便在学校里旁听，又过了大约一年半，我彻底离开。那么，我为什么退学呢?</p><p>It started before I was born. My biological mother was a young, unwed college graduate student, and she decided to put me up for adoption. She felt very strongly that I should be adopted by college graduates, so everything was all set for me to be adopted at birth by a lawyer and his wife.</p><p>这得从我出生前讲起。我的生母是一名年轻的未婚在校研究生，她决定将我送给别人收养。她非常希望收养我的是有大学学历的人，所以把一切都安排好了，我一出生就交给一对律师夫妇收养。</p><p>Except that when I popped out they decided at the last minute that they really wanted a girl. So my parents, who were on a waiting list, got a call in the middle of the night asking: “We have an unexpected baby boy; do you want him?” They said: “Of course.”</p><p>没想到我落地的霎那间，那对夫妇却决定收养一名女孩。就这样，我的养父母─当时他们还在登记册上排队等着呢─半夜三更接到一个电话: “我们这儿有一个没人要的男婴，你们要么?”“当然要”他们回答。</p><p>My biological mother later found out that my mother had never graduated from college and that my father had never graduated from high school. She refused to sign the final adoption papers. She only relented a few months later when my parents promised that I would someday go to college.</p><p>但是，我的生母后来发现我的养母不是大学毕业生，我的养父甚至连中学都没有毕业，所以她拒绝在最后的收养文件上签字。不过，没过几个月她就心软了，因为我的养父母许诺日后一定送我上大学。</p><p>And 17 years later I did go to college. But I naively chose a college that was almost as expensive as Stanford, and all of my working-class parents’ savings were being spent on my college tuition.</p><p>17 年后，我真的进了大学。当时我很天真，选了一所学费几乎和斯坦福大学一样昂贵的学校，当工人的养父母倾其所有的积蓄为我支付了大学学费。</p><p>After six months, I couldn’t see the value in it. I had no idea what I wanted to do with my life and no idea how college was going to help me figure it out. And here I was spending all of the money my parents had saved their entire life.</p><p>读了六个月后，我却看不出上学有什么意义。我既不知道自己这一生想干什么，也不知道大学是否能够帮我弄明白自己想干什么。这时，我就要花光父母一辈子节省下来的钱了。</p><p>So I decided to drop out and trust that it would all work out OK. It was pretty scary at the time, but looking back it was one of the best decisions I ever made. The minute I dropped out I could stop taking the required classes that didn’t interest me, and begin dropping in on the ones that looked interesting。</p><p>所以，我决定退学，并且坚信日后会证明我这样做是对的。当年做出这个决定时心里直打鼓，但现在回想起来，这还真是我有生以来做出的最好的决定之一。从退学那一刻起，我就可以不再选那些我毫无兴趣的必修课，开始旁听一些看上去有意思的课。</p><p>It wasn’t all romantic. I didn’t have a dorm room, so I slept on the floor in friends’ rooms, I returned coke bottles for the 5? deposits to buy food with, and I would walk the 7 miles across town every Sunday night to get one good meal a week at the Hare Krishna temple. I loved it. And much of what I stumbled into by following my curiosity and intuition turned out to be priceless later on. Let me give you one example:</p><p>那些日子一点儿都不浪漫。我没有宿舍，只能睡在朋友房间的地板上。我去退还可乐瓶，用那五分钱的押金来买吃的。每个星期天晚上我都要走七英里，到城那头的黑尔-科里施纳礼拜堂去，吃每周才能享用一次的美餐。我喜欢这样。我凭著好奇心和直觉所干的这些事情，有许多后来都证明是无价之宝。我给大家举个例子:</p><p>Reed College at that time offered perhaps the best calligraphy instruction in the country. Throughout the campus every poster, every label on every drawer, was beautifully hand calligraphed. Because I had dropped out and didn’t have to take the normal classes, I decided to take a calligraphy class to learn how to do this.</p><p>当时，里德学院的书法课大概是全国最好的。校园里所有的公告栏和每个抽屉标签上的字都写得非常漂亮。当时我已经退学，不用正常上课，所以我决定选一门书法课，学学怎么写好字。</p><p>I learned about serif and san serif typefaces, about varying the amount of space between different letter combinations, about what makes great typography great. It was beautiful, historical, artistically subtle in a way that science can’t capture, and I found it fascinating.</p><p>我学习写带短截线和不带短截线的印刷字体，根据不同字母组合调整其间距，以及怎样把版式调整得好上加好。这门课太棒了，既有历史价值，又有艺术造诣，这一点科学就做不到，而我觉得它妙不可言。</p><p>None of this had even a hope of any practical application in my life. But ten years later, when we were designing the first Macintosh computer, it all came back to me. And we designed it all into the Mac.</p><p>当时我并不指望书法在以后的生活中能有什么实用价值。但是，十年之后，我们在设计第一台 Macintosh 计算机时，它一下子浮现在我眼前。于是，我们把这些东西全都设计进了计算机中。</p><p>It was the first computer with beautiful typography. If I had never dropped in on that single course in college, the Mac would have never had multiple typefaces or proportionally spaced fonts. And since Windows just copied the Mac, its likely that no personal computer would have them.</p><p>这是第一台有这么漂亮的文字版式的计算机。要不是我当初在大学里偶然选了这么一门课，Macintosh 计算机绝不会有那么多种印刷字体或间距安排合理的字号。要不是 Windows 照搬了 Macintosh，个人电脑可能不会有这些字体和字号。</p><p>If I had never dropped out, I would have never dropped in on this calligraphy class, and personal computers might not have the wonderful typography that they do. Of course it was impossible to connect the dots looking forward when I was in college. But it was very, very clear looking backwards ten years later.</p><p>要不是退了学，我决不会碰巧选了这门书法课，个人电脑也可能不会有现在这些漂亮的版式了。当然，我在大学里不可能从这一点上看到它与将来的关系。十年之后再回头看，两者之间的关系就非常、非常清楚了。</p><p>Again, you can’t connect the dots looking forward; you can only connect them looking backwards. So you have to trust that the dots will somehow connect in your future. You have to trust in something — your gut, destiny, life, karma, whatever. This approach has never let me down, and it has made all the difference in my life.</p><p>你们同样不可能从现在这个点上看到将来；只有回头看时，才会发现它们之间的关系。所以，要相信这些点迟早会连接到一起。你们必须信赖某些东西─直觉、归宿、生命，还有业力，等等。这样做从来没有让我的希望落空过，而且还彻底改变了我的生活。</p><p>My second story is about love and loss. I was lucky — I found what I loved to do early in life. Woz and I started Apple in my parents garage when I was 20. We worked hard, and in 10 years Apple had grown from just the two of us in a garage into a $2 billion company with over 4000 employees.</p><p>我的第二个故事是关于好恶与得失。幸运的是，我在很小的时候就发现自己喜欢做什么。我在 20 岁时和沃兹在我父母的车库里办起了苹果公司。我们干得很卖力，十年后，苹果公司就从车库里我们两个人发展成为一个拥有 20 亿元资产、4,000 名员工的大企业。</p><p>We had just released our finest creation — the Macintosh — a year earlier, and I had just turned 30. And then I got fired. How can you get fired from a company you started? Well, as Apple grew we hired someone who I thought was very talented to run the company with me, and for the first year or so things went well.</p><p>那时，我们刚刚推出了我们最好的产品─ Macintosh 电脑─那是在第 9 年，我刚满 30 岁。可后来，我被解雇了。你怎么会被自己办的公司解雇呢?是这样，随著苹果公司越做越大，我们聘了一位我认为非常有才华的人与我一道管理公司。在开始的一年多里，一切都很顺利。</p><p>But then our visions of the future began to diverge and eventually we had a falling out. When we did, our Board of Directors sided with him. So at 30 I was out. And very publicly out. What had been the focus of my entire adult life was gone, and it was devastating.</p><p>可是，随后我俩对公司前景的看法开始出现分歧，最后我俩反目了。这时，董事会站在了他那一边，所以在 30 岁那年，我离开了公司，而且这件事闹得满城风雨。我成年后的整个生活重心都没有了，这使我心力交瘁。</p><p>I really didn’t know what to do for a few months. I felt that I had let the previous generation of entrepreneurs down - that I had dropped the baton as it was being passed to me. I met with David Packard and Bob Noyce and tried to apologize for screwing up so badly. I was a very public failure, and I even thought about running away from the valley.</p><p>一连几个月，我真的不知道应该怎么办。我感到自己给老一代的创业者丢了脸─因为我扔掉了交到自己手里的接力棒。我去见了戴维帕卡德和鲍勃.诺伊斯，想为把事情搞得这么糟糕说声道歉。这次失败弄得沸沸扬扬的，我甚至想过逃离硅谷。</p><p>But something slowly began to dawn on me — I still loved what I did. The turn of events at Apple had not changed that one bit. I had been rejected, but I was still in love. And so I decided to start over.</p><p>但是，渐渐地，我开始有了一个想法─我仍然热爱我过去做的一切。在苹果公司发生的这些风波丝毫没有改变这一点。我虽然被拒之门外，但我仍然深爱我的事业。于是，我决定从头开始。</p><p>I didn’t see it then, but it turned out that getting fired from Apple was the best thing that could have ever happened to me. The heaviness of being successful was replaced by the lightness of being a beginner again, less sure about everything. It freed me to enter one of the most creative periods of my life.</p><p>虽然当时我并没有意识到，但事实证明，被苹果公司炒鱿鱼是我一生中碰到的最好的事情。尽管前景未卜，但从头开始的轻松感取代了保持成功的沉重感。这使我进入了一生中最富有创造力的时期之一。</p><p>During the next five years, I started a company named NeXT, another company named Pixar, and fell in love with an amazing woman who would become my wife. Pixar went on to create the worlds first computer animated feature film, Toy Story, and is now the most successful animation studio in the world.</p><p>在此后的五年里，我开了一家名叫 NeXT 的公司和一家叫皮克斯的公司，我还爱上一位了不起的女人，后来娶了她。皮克斯公司推出了世界上第一部用电脑制作的动画片《玩具总动员》(Toy Story)，它现在是全球最成功的动画制作室。</p><p>In a remarkable turn of events, Apple bought NeXT, I retuned to Apple, and the technology we developed at NeXT is at the heart of Apple’s current renaissance. And Laurene and I have a wonderful family together.</p><p>世道轮回，苹果公司买下 NeXT 后，我又回到了苹果公司，我们在 NeXT 公司开发的技术成了苹果公司这次重新崛起的核心。我和劳伦娜(Laurene)也建立了美满的家庭。</p><p>I’m pretty sure none of this would have happened if I hadn’t been fired from Apple. It was awful tasting medicine, but I guess the patient needed it. Sometimes life hits you in the head with a brick. Don’t lose faith. I’m convinced that the only thing that kept me going was that I loved what I did.</p><p>我确信，如果不是被苹果公司解雇，这一切决不可能发生。这是一剂苦药，可我认为苦药利于病。有时生活会当头给你一棒，但不要灰心。我坚信让我一往无前的唯一力量就是我热爱我所做的一切。</p><p>You’ve got to find what you love. And that is as true for your work as it is for your lovers. Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do.</p><p>所以，一定得知道自己喜欢什么，选择爱人时如此，选择工作时同样如此。工作将是生活中的一大部分，让自己真正满意的唯一办法，是做自己认为是有意义的工作;做有意义的工作的唯一办法，是热爱自己的工作。</p><p>If you haven’t found it yet, keep looking. Don’t settle. As with all matters of the heart, you’ll know when you find it. And, like any great relationship, it just gets better and better as the years roll on. So keep looking until you find it. Don’t settle.</p><p>你们如果还没有发现自己喜欢什么，那就不断地去寻找，不要急于做出决定。就像一切要凭着感觉去做的事情一样，一旦找到了自己喜欢的事，感觉就会告诉你。就像任何一种美妙的东西，历久弥新。所以说，要不断地寻找，直到找到自己喜欢的东西。不要半途而废。</p><p>My third story is about death. When I was 17, I read a quote that went something like: “If you live each day as if it was your last, someday you’ll most certainly be right.” It made an impression on me, and since then, for the past 33 years, I have looked in the mirror every morning and asked myself: “If today were the last day of my life, would I want to do what I am about to do today?” And whenever the answer has been “No” for too many days in a row, I know I need to change something.</p><p>我的第三个故事与死亡有关。17 岁那年，我读到过这样一段话，大意是:“如果把每一天都当作生命的最后一天，总有一天你会如愿以偿。”我记住了这句话，从那时起，33 年过去了，我每天早晨都对着镜子自问: “假如今天是生命的最后一天，我还会去做今天要做的事吗?”如果一连许多天我的回答都是“不”，我知道自己应该有所改变了。</p><p>Remembering that I’ll be dead soon is the most important tool I’ve ever encountered to help me make the big choices in life. Because almost everything — all external expectations, all pride, all fear of embarrassment or failure - these things just fall away in the face of death, leaving only what is truly important. Remembering that you are going to die is the best way I know to avoid the trap of thinking you have something to lose. You are already naked. There is no reason not to follow your heart.</p><p>让我能够做出人生重大抉择的最主要办法是，记住生命随时都有可能结束。因为几乎所有的东西─所有对自身之外的希求、所有的尊严、所有对困窘和失败的恐惧─在死亡来临时都将不复存在，只剩下真正重要的东西。记住自己随时都会死去，这是我所知道的防止患得患失的最好方法。你已经一无所有了，还有什么理由不跟着自己的感觉走呢。</p><p>About a year ago I was diagnosed with cancer. I had a scan at 7:30 in the morning, and it clearly showed a tumor on my pancreas. I didn’t even know what a pancreas was. The doctors told me this was almost certainly a type of cancer that is incurable, and that I should expect to live no longer than three to six months.</p><p>大约一年前，我被诊断患了癌症。那天早上七点半，我做了一次扫描检查，结果清楚地表明我的胰腺上长了一个瘤子，可那时我连胰腺是什么还不知道呢!医生告诉我说，几乎可以确诊这是一种无法治愈的恶性肿瘤，我最多还能活 3 到 6 个月。</p><p>My doctor advised me to go home and get my affairs in order, which is doctor’s code for prepare to die. It means to try to tell your kids everything you thought you’d have the next 10 years to tell them in just a few months. It means to make sure everything is buttoned up so that it will be as easy as possible for your family. It means to say your goodbyes.</p><p>医生建议我回去把一切都安排好，其实这是在暗示“准备后事”。也就是说，把今后十年要跟孩子们说的事情在这几个月内嘱咐完;也就是说，把一切都安排妥当，尽可能不给家人留麻烦；也就是说，去跟大家诀别。</p><p>I lived with that diagnosis all day. Later that evening I had a biopsy, where they stuck an endoscope down my throat, through my stomach and into my intestines, put a needle into my pancreas and got a few cells from the tumor. I was sedated, but my wife, who was there, told me that when they viewed the cells under a microscope the doctors started crying because it turned out to be a very rare form of pancreatic cancer that is curable with surgery. I had the surgery and I’m fine now.</p><p>那一整天里，我的脑子一直没离开这个诊断。到了晚上，我做了一次组织切片检查，他们把一个内窥镜通过喉咙穿过我的胃进入肠子，用针头在胰腺的瘤子上取了一些细胞组织。当时我用了麻醉剂，陪在一旁的妻子后来告诉我，医生在显微镜里看了细胞之后叫了起来，原来这是一种少见的可以通过外科手术治愈的恶性肿瘤。我做了手术，现在好了。</p><p>This was the closest I’ve been to facing death, and I hope its the closest I get for a few more decades. Having lived through it, I can now say this to you with a bit more certainty than when death was a useful but purely intellectual concept:No one wants to die. Even people who want to go to heaven don’t want to die to get there. And yet death is the destination we all share.</p><p>这是我和死神离得最近的一次，我希望也是今后几十年里最近的一次。有了这次经历之后，现在我可以更加实在地和你们谈论死亡，而不是纯粹纸上谈兵，那就是: 谁都不愿意死。就是那些想进天堂的人也不愿意死后再进。然而，死亡是我们共同的归宿，没人能摆脱。</p><p>No one has ever escaped it. And that is as it should be, because Death is very likely the single best invention of Life. It is Life’s change agent. It clears out the old to make way for the new. Right now the new is you, but someday not too long from now, you will gradually become the old and be cleared away. Sorry to be so dramatic, but it is quite true.</p><p>我们注定会死，因为死亡很可能是生命最好的一项发明。它推进生命的变迁，旧的不去，新的不来。现在，你们就是新的，但在不久的将来，你们也会逐渐成为旧的，也会被淘汰。对不起，话说得太过分了，不过这是千真万确的。</p><p>Your time is limited, so don’t waste it living someone else’s life. Don’t be trapped by dogma — which is living with the results of other people’s thinking. Don’t let the noise of others’ opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition. They somehow already know what you truly want to become. Everything else is secondary.</p><p>你们的时间都有限，所以不要按照别人的意愿去活，这是浪费时间。不要囿于成见，那是在按照别人设想的结果而活。不要让别人观点的聒噪声淹没自己的心声。最主要的是，要有跟着自己感觉和直觉走的勇气。无论如何，感觉和直觉早就知道你到底想成为什么样的人，其他都是次要的。</p><p>When I was young, there was an amazing publication called The Whole Earth Catalog, which was one of the bibles of my generation. It was created by a fellow named Stewart Brand not far from here in Menlo Park, and he brought it to life with his poetic touch.</p><p>我年轻时有一本非常好的刊物，叫《全球概览》，这是我那代人的宝书之一，创办人名叫斯图尔特布兰德，就住在离这儿不远的门洛帕克市。他用诗一般的语言把刊物办得生动活泼。</p><p>This was in the late 1960’s, before personal computers and desktop publishing, so it was all made with typewriters, scissors, and polaroid cameras. It was sort of like Google in paperback form, 35 years before Google came along: it was idealistic, and overflowing with neat tools and great notions.</p><p>那是 20 世纪 60 年代末，还没有个人电脑和桌面印刷系统，全靠打字机、剪刀和宝丽莱照相机。它就像一种纸质的 Google，却比 Google 早问世了 35 年。这份刊物太完美了，查阅手段齐备、构思不凡。</p><p>Stewart and his team put out several issues of The Whole Earth Catalog, and then when it had run its course, they put out a final issue. It was the mid-1970s, and I was your age.</p><p>斯图尔特和他的同事们出了好几期《全球概览》，到最后办不下去时，他们出了最后一期。那是 20 世纪 70 年代中期，我也就是你们现在的年纪。</p><p>On the back cover of their final issue was a photograph of an early morning country road, the kind you might find yourself hitchhiking on if you were so adventurous. Beneath it were the words: “Stay Hungry. Stay Foolish.” It was their farewell message as they signed off. Stay Hungry. Stay Foolish. And I have always wished that for myself.</p><p>最后一期的封底上是一张清晨乡间小路的照片，就是那种爱冒险的人等在那儿搭便车的那种小路。照片下面写道: 求知若饥、虚心若愚。那是他们停刊前的告别语。求知若渴，大智若愚。这也是我一直想做到的。</p><p>And now, as you graduate to begin anew, I wish that for you. Stay Hungry. Stay Foolish.</p><p>眼下正值诸位大学毕业、开始新生活之际，我同样愿大家：求知若饥、虚心若愚。</p><p><img src="/images/load.png" data-original="https://img-blog.csdnimg.cn/20190922204331298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhdGFpeWFuZ3U=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></div></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>TED</category>
      </categories>
      <tags>
        <tag>TED</tag>
      </tags>
  </entry>
  <entry>
    <title>个人的谷歌书签</title>
    <url>/2020/03/17/%E8%B0%B7%E6%AD%8C%E4%B9%A6%E7%AD%BE/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><h1 id="1-下载书签："><a href="#1-下载书签：" class="headerlink" title="1. 下载书签："></a>1. 下载书签：</h1><ul><li><p><a href="https://pan.baidu.com/s/1ZrSXM21Bh5NGpSlwwRHkWw" target="_blank" rel="noopener">百度网盘</a></p></li><li><p>提取码: vyax</p></li></ul><h1 id="2-导入书签："><a href="#2-导入书签：" class="headerlink" title="2. 导入书签："></a>2. 导入书签：</h1><h2 id="1-Google-Chrome"><a href="#1-Google-Chrome" class="headerlink" title="1. Google Chrome:"></a>1. Google Chrome:</h2><p>要从大多数浏览器（如 Firefox、Internet Explorer 和 Safari）导入书签，请按以下步骤操作：</p><ol><li><p>在计算机上打开 Chrome</p></li><li><p>点击右上角的“更多”图标（三个点）</p></li><li><p>依次选择<strong>书签</strong>-&gt;<strong>导入书签和设置</strong></p></li><li><p>选择包含待导入书签的程序（此处选择HTML）</p></li><li><p>点击<strong>导入</strong></p></li><li><p>点击<strong>完成</strong></p><h2 id="2-Microsoft-Edge"><a href="#2-Microsoft-Edge" class="headerlink" title="2. Microsoft Edge:"></a>2. Microsoft Edge:</h2><ol><li><p>从浏览器中导入</p><ol><li>打开 Microsoft Edge，依次选择“设置及更多” &gt;“收藏夹”</li><li>选择“导入”</li><li>在“导入来源”框中，选择要从中导入收藏夹的浏览器</li><li>在“选择要导入的内容”下，选择“收藏夹或书签”（你还可以选择其他项）</li><li>选择“导入”</li><li>导入完成后，你将看到一条通知。选择“完成”</li></ol></li><li><p>从文件导入</p><ol><li>打开 Microsoft Edge，依次选择“设置及更多” &gt;“收藏夹”</li><li>选择“导入”</li><li>在“导入来源”框中，选择“收藏夹或书签 HTML 文件”</li><li>选择“选择文件”，然后找到你在从其他浏览器导出收藏夹时创建的 HTML 文件</li><li>选择要使用的文件，然后选择“打开”</li><li>导入完成后，你将看到一条通知。选择“完成”</li><li>在收藏夹栏上的文件夹中找到导入的收藏夹。该文件夹可能名为“已导入”</li></ol></li></ol><ul><li><strong>注意</strong>：本主题适用于新版 Microsoft Edge 。获取有关<a href="https://support.microsoft.com/hub/4522743/microsoft-edge-help" target="_blank" rel="noopener">旧版本 Microsoft Edge</a> 的帮助</li></ul></li></ol><h3 id="说明-书签HTML中均为个人收藏，如若有所帮助，深感荣幸。"><a href="#说明-书签HTML中均为个人收藏，如若有所帮助，深感荣幸。" class="headerlink" title="说明:书签HTML中均为个人收藏，如若有所帮助，深感荣幸。"></a><strong><span style="color:red;background:#fff;font-size:15;font-family:字体">说明:书签HTML中均为个人收藏，如若有所帮助，深感荣幸。</span></strong></h3><!-- rebuild by neat -->]]></content>
      <categories>
        <category>google</category>
        <category>书签收藏夹谷歌</category>
      </categories>
      <tags>
        <tag>google</tag>
        <tag>书签收藏夹</tag>
      </tags>
  </entry>
  <entry>
    <title>python列表生成式</title>
    <url>/2020/03/05/python%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><h1 id="列表生成式"><a href="#列表生成式" class="headerlink" title="列表生成式"></a>列表生成式</h1><p>列表生成式即List Comprehensions，是Python内置的非常简单却强大的可以用来创建list的生成式。</p><p>举个例子，要生成list <code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</code>可以用<code>list(range(1, 11))</code>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(range(<span class="number">1</span>, <span class="number">11</span>))</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><p>但如果要生成<code>[1x1, 2x2, 3x3, ..., 10x10]</code>怎么做？方法一是循环：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line"><span class="meta">... </span>   L.append(x * x)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br></pre></td></tr></table></figure><p>但是循环太繁琐，而列表生成式则可以用一行语句代替循环生成上面的list：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br></pre></td></tr></table></figure><p>写列表生成式时，把要生成的元素<code>x * x</code>放到前面，后面跟<code>for</code>循环，就可以把list创建出来，十分有用，多写几次，很快就可以熟悉这种语法。</p><p>for循环后面还可以加上if判断，这样我们就可以筛选出仅偶数的平方：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line">[<span class="number">4</span>, <span class="number">16</span>, <span class="number">36</span>, <span class="number">64</span>, <span class="number">100</span>]</span><br></pre></td></tr></table></figure><p>还可以使用两层循环，可以生成全排列：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[m + n <span class="keyword">for</span> m <span class="keyword">in</span> <span class="string">'ABC'</span> <span class="keyword">for</span> n <span class="keyword">in</span> <span class="string">'XYZ'</span>]</span><br><span class="line">[<span class="string">'AX'</span>, <span class="string">'AY'</span>, <span class="string">'AZ'</span>, <span class="string">'BX'</span>, <span class="string">'BY'</span>, <span class="string">'BZ'</span>, <span class="string">'CX'</span>, <span class="string">'CY'</span>, <span class="string">'CZ'</span>]</span><br></pre></td></tr></table></figure><p>三层和三层以上的循环就很少用到了。</p><p>运用列表生成式，可以写出非常简洁的代码。例如，列出当前目录下的所有文件和目录名，可以通过一行代码实现：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os <span class="comment"># 导入os模块，模块的概念后面讲到</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[d <span class="keyword">for</span> d <span class="keyword">in</span> os.listdir(<span class="string">'.'</span>)] <span class="comment"># os.listdir可以列出文件和目录</span></span><br><span class="line">[<span class="string">'.emacs.d'</span>, <span class="string">'.ssh'</span>, <span class="string">'.Trash'</span>, <span class="string">'Adlm'</span>, <span class="string">'Applications'</span>, <span class="string">'Desktop'</span>, <span class="string">'Documents'</span>, <span class="string">'Downloads'</span>, <span class="string">'Library'</span>, <span class="string">'Movies'</span>, <span class="string">'Music'</span>, <span class="string">'Pictures'</span>, <span class="string">'Public'</span>, <span class="string">'VirtualBox VMs'</span>, <span class="string">'Workspace'</span>, <span class="string">'XCode'</span>]</span><br></pre></td></tr></table></figure><p><code>for</code>循环其实可以同时使用两个甚至多个变量，比如<code>dict</code>的<code>items()</code>可以同时迭代key和value：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">'x'</span>: <span class="string">'A'</span>, <span class="string">'y'</span>: <span class="string">'B'</span>, <span class="string">'z'</span>: <span class="string">'C'</span> &#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> k, v <span class="keyword">in</span> d.items():</span><br><span class="line"><span class="meta">... </span>    print(k, <span class="string">'='</span>, v)</span><br><span class="line">...</span><br><span class="line">y = B</span><br><span class="line">x = A</span><br><span class="line">z = C</span><br></pre></td></tr></table></figure><p>因此，列表生成式也可以使用两个变量来生成list：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">'x'</span>: <span class="string">'A'</span>, <span class="string">'y'</span>: <span class="string">'B'</span>, <span class="string">'z'</span>: <span class="string">'C'</span> &#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[k + <span class="string">'='</span> + v <span class="keyword">for</span> k, v <span class="keyword">in</span> d.items()]</span><br><span class="line">[<span class="string">'y=B'</span>, <span class="string">'x=A'</span>, <span class="string">'z=C'</span>]</span><br></pre></td></tr></table></figure><p>最后把一个list中所有的字符串变成小写：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = [<span class="string">'Hello'</span>, <span class="string">'World'</span>, <span class="string">'IBM'</span>, <span class="string">'Apple'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[s.lower() <span class="keyword">for</span> s <span class="keyword">in</span> L]</span><br><span class="line">[<span class="string">'hello'</span>, <span class="string">'world'</span>, <span class="string">'ibm'</span>, <span class="string">'apple'</span>]</span><br></pre></td></tr></table></figure><h3 id="if-…-else"><a href="#if-…-else" class="headerlink" title="if … else"></a>if … else</h3><p>使用列表生成式的时候，有些童鞋经常搞不清楚<code>if...else</code>的用法。</p><p>例如，以下代码正常输出偶数：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line">[<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><p>但是，我们不能在最后的<code>if</code>加上<code>else</code>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span>]</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span></span><br><span class="line">    [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span>]</span><br><span class="line">                                              ^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></table></figure><p>这是因为跟在<code>for</code>后面的<code>if</code>是一个筛选条件，不能带<code>else</code>，否则如何筛选？</p><p>另一些童鞋发现把<code>if</code>写在<code>for</code>前面必须加<code>else</code>，否则报错：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span></span><br><span class="line">    [x <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line">                       ^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></table></figure><p>这是因为<code>for</code>前面的部分是一个表达式，它必须根据<code>x</code>计算出一个结果。因此，考察表达式：<code>x if x % 2 == 0</code>，它无法根据<code>x</code>计算出结果，因为缺少<code>else</code>，必须加上<code>else</code>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> -x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line">[<span class="number">-1</span>, <span class="number">2</span>, <span class="number">-3</span>, <span class="number">4</span>, <span class="number">-5</span>, <span class="number">6</span>, <span class="number">-7</span>, <span class="number">8</span>, <span class="number">-9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><p>上述<code>for</code>前面的表达式<code>x if x % 2 == 0 else -x</code>才能根据<code>x</code>计算出确定的结果。</p><p>可见，在一个列表生成式中，<code>for</code>前面的<code>if ... else</code>是表达式，而<code>for</code>后面的<code>if</code>是过滤条件，不能带<code>else</code>。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>git上传大文件或者PDF或者二进制文件无法上传</title>
    <url>/2020/03/04/git%E4%B8%8A%E4%BC%A0%E5%A4%A7%E6%96%87%E4%BB%B6%E6%88%96%E8%80%85PDF%E6%88%96%E8%80%85%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><p><span style="color:red;background:#fff;font-size:15;font-family:字体">提醒：git commit –hard commit_id 会把commit对应的文件从本地库删除！谨慎使用此命令！</span></p><h2 id="1-问题描述"><a href="#1-问题描述" class="headerlink" title="1. 问题描述"></a>1. 问题描述</h2><p>​ push大文件失败，在将大文件删除之后，其余小文件仍然受到之前大文件push失败的影响，无法正常push。</p><h2 id="2-解决方案"><a href="#2-解决方案" class="headerlink" title="2. 解决方案"></a>2. 解决方案</h2><p>​ 需要将之前含有大文件的commit记录删除（全部删除）</p><h2 id="3-详细过程"><a href="#3-详细过程" class="headerlink" title="3. 详细过程"></a>3. 详细过程</h2><ol><li><p>将git切换到之前提交的git项目所在目录</p></li><li><p>使用<code>git log</code>命令查看commit的历史记录及其对应的commit_id，查看结果如图：</p><p><img src="/images/load.png" data-original="/2020/03/04/git%E4%B8%8A%E4%BC%A0%E5%A4%A7%E6%96%87%E4%BB%B6%E6%88%96%E8%80%85PDF%E6%88%96%E8%80%85%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0/1.JPG" alt="1.JPG"></p></li><li><p>复制commit_id，使用Ctrl+C退出log查看页面，进入正常git可输入命令界面，输入下面命令，使git回退到commit_id的状态。 <code>git reset --hard //前面3个单词不需改变，将改成对应的commit_id的值</code></p><p><img src="/images/load.png" data-original="/2020/03/04/git%E4%B8%8A%E4%BC%A0%E5%A4%A7%E6%96%87%E4%BB%B6%E6%88%96%E8%80%85PDF%E6%88%96%E8%80%85%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0/2.JPG" alt="2.JPG"></p></li><li><p>使用下列命令使本地和远程的内容都回退到commit_id对应的状态。 <code>git push origin HEAD --force //固定模式，不需要改变单词</code></p><p><img src="/images/load.png" data-original="/2020/03/04/git%E4%B8%8A%E4%BC%A0%E5%A4%A7%E6%96%87%E4%BB%B6%E6%88%96%E8%80%85PDF%E6%88%96%E8%80%85%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0/3.JPG" alt="3.JPG"></p></li></ol><h2 id="4-参数解释"><a href="#4-参数解释" class="headerlink" title="4. 参数解释"></a>4. 参数解释</h2><p>根据–soft –mixed –hard，会对working tree和index和HEAD进行重置:</p><ul><li><p>git reset –mixed：此为默认方式，不带任何参数的git reset，即时这种方式，它回退到某个版本，只保留源码，回退commit和index信息。</p></li><li><p>git reset –soft：回退到某个版本，只回退了commit的信息，不会恢复到index file一级。如果还要提交，直接commit即可。</p></li><li><p>git reset –hard：彻底回退到某个版本，本地的源码也会变为上一个版本的内容。</p></li><li><p>git status :查看未被传送到远程代码库的提交状态</p></li><li><p>git cherry -v 查看未被传送到远程代码库的提交描述和说明</p></li><li><p>git reset commit_id 撤销未被传送到远程代码库的提交</p></li><li><p>HEAD 最近一个提交</p></li><li><p>HEAD^ 上一次提交</p></li><li><p>每次commit的SHA1值. 可以用git log 看到,也可以在页面上commit标签页里找到。</p></li></ul><h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><p><a href="https://www.douban.com/note/189603387/" target="_blank" rel="noopener">git 删除错误提交的commit</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>学生管理系统</title>
    <url>/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><h1 id="学生管理系统"><a href="#学生管理系统" class="headerlink" title="学生管理系统"></a>学生管理系统</h1><h2 id="（第1阶段）学生信息管理系统部分截图"><a href="#（第1阶段）学生信息管理系统部分截图" class="headerlink" title="（第1阶段）学生信息管理系统部分截图"></a>（第1阶段）学生信息管理系统部分截图</h2><p><img src="/images/load.png" data-original="/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/1-1.JPG" alt="1-1.JPG"></p><p><img src="/images/load.png" data-original="/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/1-2.JPG" alt="1-2.JPG"></p><h2 id="（第2阶段）学生选课管理系统部分截图"><a href="#（第2阶段）学生选课管理系统部分截图" class="headerlink" title="（第2阶段）学生选课管理系统部分截图"></a>（第2阶段）学生选课管理系统部分截图</h2><p><img src="/images/load.png" data-original="/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/2-1.JPG" alt="2-1.JPG"></p><p><img src="/images/load.png" data-original="/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/2-2.JPG" alt="2-2.JPG"></p><p><img src="/images/load.png" data-original="/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/2-3.JPG" alt="2-3.JPG"></p><p><img src="/images/load.png" data-original="/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/2-4.JPG" alt="2-4.JPG"></p><p><img src="/images/load.png" data-original="/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/2-5.JPG" alt="2-5.JPG"></p><h2 id="（第3阶段）学生签到考勤系统截图-略"><a href="#（第3阶段）学生签到考勤系统截图-略" class="headerlink" title="（第3阶段）学生签到考勤系统截图(略)"></a>（第3阶段）学生签到考勤系统截图(略)</h2><h2 id="（第4阶段）学生成绩管理系统部分截图"><a href="#（第4阶段）学生成绩管理系统部分截图" class="headerlink" title="（第4阶段）学生成绩管理系统部分截图"></a>（第4阶段）学生成绩管理系统部分截图</h2><p><img src="/images/load.png" data-original="/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/4-1.JPG" alt="4-1.JPG"></p><p><img src="/images/load.png" data-original="/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/4-2.JPG" alt="4-2.JPG"></p><p><img src="/images/load.png" data-original="/2020/03/01/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/4-3.JPG" alt="4-3.JPG"></p><h4 id="完整源代码和视频教学资源：百度云链接-百度网盘，提取码：3jbh"><a href="#完整源代码和视频教学资源：百度云链接-百度网盘，提取码：3jbh" class="headerlink" title="完整源代码和视频教学资源：百度云链接:百度网盘，提取码：3jbh"></a><strong><em>完整源代码和视频教学资源：百度云链接:<a href="https://pan.baidu.com/s/1vwebuzdVTBmSc-bHdbEnSg" target="_blank" rel="noopener">百度网盘</a>，提取码：3jbh</em></strong></h4><!-- rebuild by neat -->]]></content>
      <categories>
        <category>学生管理系统</category>
      </categories>
      <tags>
        <tag>学生管理系统</tag>
      </tags>
  </entry>
  <entry>
    <title>更新日志</title>
    <url>/2020/03/01/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><h1 id="1-更新："><a href="#1-更新：" class="headerlink" title="1. 更新："></a>1. 更新：</h1><h2 id="2020-2-29"><a href="#2020-2-29" class="headerlink" title="2020.2.29"></a>2020.2.29</h2><ol><li><em>页面加载性能优化</em></li><li><em>图片懒加载</em></li><li><em>发布新博客</em></li><li><em>优化背景</em></li><li><em>压缩代码</em></li></ol><h2 id="2020-3-1"><a href="#2020-3-1" class="headerlink" title="2020.3.1"></a>2020.3.1</h2><p>​ <em>百度站点收录和推送</em></p><h2 id="2020-3-17"><a href="#2020-3-17" class="headerlink" title="2020.3.17"></a>2020.3.17</h2><p>​ 版权音乐以及播放器更换</p><h1 id="2-优化："><a href="#2-优化：" class="headerlink" title="2. 优化："></a>2. 优化：</h1><ul><li><strong><em>网易云音乐版权歌曲无法加载（已优化）</em></strong></li><li><strong><em>页面加载速度优化（可进一步优化）</em></strong></li><li><strong><em>待完善…</em></strong></li></ul><h1 id="3-BUG"><a href="#3-BUG" class="headerlink" title="3. BUG"></a>3. BUG</h1><ul><li><strong><em>网页切换界面的时中断播放（考虑用Pjax）</em></strong></li><li><strong><em>待完善…</em></strong></li></ul><!-- rebuild by neat -->]]></content>
      <tags>
        <tag>更新日志</tag>
      </tags>
  </entry>
  <entry>
    <title>1.3网络核心</title>
    <url>/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><h1 id="网络核心"><a href="#网络核心" class="headerlink" title="网络核心"></a>网络核心</h1><h2 id="数据交换"><a href="#数据交换" class="headerlink" title="数据交换"></a>数据交换</h2><h3 id="1-为什么要进行数据交换？"><a href="#1-为什么要进行数据交换？" class="headerlink" title="1. 为什么要进行数据交换？"></a>1. 为什么要进行数据交换？</h3><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E6%95%B0%E6%8D%AE%E4%BA%A4%E6%8D%A2.PNG" alt="数据交换.PNG"></p><h3 id="2-数据交换的类型"><a href="#2-数据交换的类型" class="headerlink" title="2. 数据交换的类型"></a>2. 数据交换的类型</h3><ol><li><h4 id="电路交换"><a href="#电路交换" class="headerlink" title="电路交换"></a>电路交换</h4><ul><li><p><strong><em>最典型电路交换网络：电话网络</em></strong></p></li><li><p>电路交换的三个阶段：</p><ol><li>建立连接（呼叫/电路建立）</li><li>通信</li><li>释放连接（拆除电路）</li></ol></li><li><p><strong><span style="color:red;background:#fff;font-size:15;font-family:字体">特点: 独占资源</span></strong></p></li></ul><p><strong><em>Q: 电路交换网络的链路共享？电路交换网络如何共享中继线？</em></strong><br><strong><em>A: <span style="color:red;background:#fff;font-size:15;font-family:字体">——多路复用（Multiplexing）</span></em></strong></p><p>​ 多路复用,简称复用，是通信技术中的基本概念,链路/网络资源划分为“资源片”</p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8%E6%8A%80%E6%9C%AF-1.PNG" alt="多路复用技术"></p><ul><li><p>将资源片划分给各路“呼叫”</p></li><li><p>每路呼叫<span style="color:red;background:#fff;font-size:15;font-family:字体">独占</span>分配到的资源片进行通信</p></li><li><p>资源片可能“<span style="color:red;background:#fff;font-size:15;font-family:字体">闲置</span>”（<span style="color:red;background:#fff;font-size:15;font-family:字体">idle</span>）（无共享）</p></li></ul><p>典型多路复用的方法：</p><ol><li><p>频分多路复用（FDM）</p><ul><li><p>如：有线电视网络</p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/FDM-1.PNG" alt="FDM-1"></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/FDM-2.PNG" alt="FDM-2"></p></li></ul></li><li><p>时分多路复用（TDM）</p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/TDM-1.PNG" alt="TDM-1"></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/TDM-2.PNG" alt="TDM-2"></p></li><li><p>波分多路复用（WDM）<strong><em>波分复用就是光的频分复用，<span style="color:red;background:#fff;font-size:15;font-family:字体">WDM的实质就是FDM</span></em></strong></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/WDM-1.PNG" alt="WDM-1"></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/WDM-2.PNG" alt="WDM-2"></p></li><li><p>码分多路复用（CDM）</p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/CDM-1.PNG" alt="CDM-1"></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/CDM-2.PNG" alt="CDM-2"></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/CDM-3.PNG" alt="CDM-3"></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/CDM-4.PNG" alt="CDM-4"></p></li></ol></li><li><h4 id="报文交换"><a href="#报文交换" class="headerlink" title="报文交换"></a>报文交换</h4><p><strong>报文:</strong>源（应用）发送信息的整体（比如一个文件）</p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2.PNG" alt="报文交换.PNG"></p></li><li><h4 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换"></a>分组交换</h4><ul><li><p><strong>分组:</strong>把报文拆分出来的一系列相对小的数据包</p></li><li><p>分组交换需要报文的<span style="color:red;background:#fff;font-size:15;font-family:字体">拆分</span>和<span style="color:red;background:#fff;font-size:15;font-family:字体">重组</span></p></li><li><p>产生<span style="color:red;background:#fff;font-size:15;font-family:字体">额外开销</span></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2-1.PNG" alt="分组交换-1.PNG"></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2-2.PNG" alt="分组交换-2.PNG"></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2-3.PNG" alt="分组交换-3.PNG"></p></li></ul><h5 id="分组交换-统计多路复用"><a href="#分组交换-统计多路复用" class="headerlink" title="分组交换:统计多路复用"></a>分组交换:统计多路复用</h5><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E7%BB%9F%E8%AE%A1%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8.PNG" alt="统计多路复用.PNG"></p><h5 id="存储-转发过程"><a href="#存储-转发过程" class="headerlink" title="存储-转发过程"></a>存储-转发过程</h5><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E5%AD%98%E5%82%A8-%E8%BD%AC%E5%8F%91.PNG" alt="存储-转发.PNG"></p><h5 id="传输延迟"><a href="#传输延迟" class="headerlink" title="传输延迟"></a>传输延迟</h5><p>​ <span style="color:red;background:#fff;font-size:15;font-family:字体">分组传输延迟（时延）（delay）=L（bits）/R（bits/sec）</span></p><p>​ L：报文被拆分为较小长度为L bits的分组（packets）</p><p>​ R：链路传输速率（bps）,在传输速率为R的链路上传输分组</p></li></ol><p><strong><em>1. 报文交换 VS 分组交换？</em></strong></p><ul><li>报文交换<ul><li>报文长度为M bits</li><li>链路带宽为R bps</li><li>每次传输报文需要M/R s</li></ul></li><li>分组交换<ul><li>报文被拆分为多个分组</li><li>分组长度为L bits</li><li>每个分组传输时延为L/R s</li></ul></li></ul><p>例:M=7.5 Mbits, L=1500 bits （M=5000L）R=1.5Mbps</p><p>报文交换<span style="color:red;background:#fff;font-size:15;font-family:字体"><strong>每经过一个路由器</strong></span>需要5s，总共15s，如果有多个路由器要考虑至少有该报文大小的缓存</p><p>​ <img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2%E6%97%B6%E9%97%B4.PNG" alt="报文交换时间.PNG"></p><p>分组交换<span style="color:red;background:#fff;font-size:15;font-family:字体">每经过一个路由器</span>总共需要5002ms （5.002sec），要考虑至少有一个分组大小的缓存</p><p>​ <img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2%E6%97%B6%E9%97%B4.PNG" alt="分组交换时间.PNG"></p><p><strong><em>分组交换是计算机网络和大部分数据网络中广泛使用的</em></strong></p><p><span style="color:red;background:#fff;font-size:15;font-family:字体"><strong>总结:</strong></span><strong>若报文:M bits | 链路带宽（数据传输速率）：R bps | 分组长度：L bits | 跳步数：h | 路由器数：n(即h = n - 1)则<span style="color:red;background:#fff;font-size:15;font-family:字体">T</span> = M / R + (h - 1)L / R</strong></p><p>​ <span style="color:red;background:#fff;font-size:15;font-family:字体"><strong>= M / R + n * L / R</strong></span></p><p><em>例题:</em></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E9%A2%98-1.PNG" alt="题-1.PNG"></p><p><img src="/images/load.png" data-original="/2020/02/29/1.3%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83/%E7%AD%94%E6%A1%88-1.PNG" alt="答案-1.PNG"></p><p><strong><em>2. 分组交换 VS 电路交换？</em></strong></p><p>（1）<strong>分组交换</strong>可以允许更多的用户同时使用网络—网络资源充分共享</p><ol><li><p>适用于突发数据传输网络</p><ul><li>资源充分共享</li><li>简单、无需呼叫建立</li></ul><p><span style="color:red;background:#fff;font-size:15;font-family:字体">2. 可能产生拥塞：分组延迟和丢失</span></p></li></ol><p>​ 需要协议处理可靠数据传输和拥塞控制</p><p><strong>(2)电路交换更适合实时数据流传输。</strong></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>1.2计算机网络结构</title>
    <url>/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><h1 id="1-计算机网络结构"><a href="#1-计算机网络结构" class="headerlink" title="1. 计算机网络结构"></a>1. 计算机网络结构</h1><h2 id="1-网络边缘："><a href="#1-网络边缘：" class="headerlink" title="1. 网络边缘："></a><span style="color:red;background:#fff;font-size:15;font-family:字体"><strong>1. 网络边缘</strong>：</span></h2><ul><li><span style="color:red;background:#fff;font-size:15;font-family:字体">主机（端系统）</span><ul><li>运行网络应用程序如Web，email</li></ul></li><li><span style="color:red;background:#fff;font-size:15;font-family:字体">客户/服务器应用模型</span><ul><li>客户发送请求，接收服务器响应</li><li>如Web应用，文件传输FTP应用</li></ul></li><li><span style="color:red;background:#fff;font-size:15;font-family:字体">对等应用模型</span><ul><li>无（或不仅依赖）专用服务器</li><li>通信在<span style="color:red;background:#fff;font-size:15;font-family:字体">对等</span>实体之间直接进行</li></ul></li><li><span style="color:red;background:#fff;font-size:15;font-family:字体">网络应用</span></li></ul><h2 id="2-接入网络，物理介质："><a href="#2-接入网络，物理介质：" class="headerlink" title="2. 接入网络，物理介质："></a><strong><span style="color:red;background:#fff;font-size:15;font-family:字体">2. 接入网络，物理介质：</span></strong></h2><ul><li>有线或无线通信链路</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Q: 如何将网络边缘接入核心网（边缘路由器）?</span><br><span class="line">A: 接入网络</span><br></pre></td></tr></table></figure><p><span style="color:red;background:#fff;font-size:15;font-family:字体">用户关心的是:</span></p><ol><li><p>带宽（bandwidth）（bps）</p></li><li><p>共享/独享</p></li></ol><p><strong>数字用户线路</strong>（DSL或ADSL-&gt;非对称数字用户线路）</p><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/DSL.PNG" alt="DSL"></p><p><strong>电缆网络</strong></p><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/%E7%94%B5%E7%BC%86%E7%BD%91%E7%BB%9C-1.PNG" alt="电缆网络-1"></p><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/%E7%94%B5%E7%BC%86%E7%BD%91%E7%BB%9C-2.PNG" alt="电缆网络-2"></p><p><strong>机构（企业）接入网络</strong></p><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/%E6%9C%BA%E6%9E%84%EF%BC%88%E4%BC%81%E4%B8%9A%EF%BC%89%E6%8E%A5%E5%85%A5%E7%BD%91%E7%BB%9C.PNG" alt="机构（企业）接入网络"></p><p><strong>典型家庭网络的接入</strong></p><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/%E5%85%B8%E5%9E%8B%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E7%9A%84%E6%8E%A5%E5%85%A5.PNG" alt="典型家庭网络的接入"></p><p><strong>无线接入网络</strong></p><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/%E6%97%A0%E7%BA%BF%E6%8E%A5%E5%85%A5%E7%BD%91%E7%BB%9C.PNG" alt="无线接入网络"></p><h2 id="3-网络核心（核心网络）："><a href="#3-网络核心（核心网络）：" class="headerlink" title="3. 网络核心（核心网络）："></a><span style="color:red;background:#fff;font-size:15;font-family:字体">3. 网络核心（核心网络）：</span></h2><ul><li>互联的路由器（或分组转发器）</li><li>网络之网络</li></ul><p>移动网络 - - - 全球ISP - - - 区域ISP - - - 家庭网络和结构网络（如校园网络等）</p><ul><li>网络核心的关键功能：<span style="color:red;background:#fff;font-size:15;font-family:字体">路由</span>+<span style="color:red;background:#fff;font-size:15;font-family:字体">转发</span></li></ul><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83-1.PNG" alt="网络核心-1"></p><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/%E7%BD%91%E7%BB%9C%E6%A0%B8%E5%BF%83-2.PNG" alt="网络核心-2"></p><h1 id="2-Internet结构：网络之网络"><a href="#2-Internet结构：网络之网络" class="headerlink" title="2. Internet结构：网络之网络"></a>2. Internet结构：网络之网络</h1><ul><li>端系统（主机）通过 <span style="color:red;background:#fff;font-size:15;font-family:字体">接入ISP（access ISPs）</span>连接到Internet<ul><li>家庭，公司和大学ISPs</li></ul></li><li>接入ISP必须进一步互连<ul><li>任意两个主机才可以相互发送分组</li></ul></li><li>构成复杂的网络互连的网络<ul><li>经济和国家政策是网络演进的主要驱动力</li></ul></li><li>当前Internet结构？<ul><li>无人能给出精确描述</li></ul></li></ul><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/Internet%E7%BB%93%E6%9E%84-1.PNG" alt="Internet结构-1"></p><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/Internet%E7%BB%93%E6%9E%84-2.PNG" alt="Internet结构-2"></p><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/Internet%E7%BB%93%E6%9E%84-3.PNG" alt="Internet结构-3"></p><p><img src="/images/load.png" data-original="/2020/02/27/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/Internet%E7%BB%93%E6%9E%84-4.PNG" alt="Internet结构-4"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>1.1计算机网络基本概念</title>
    <url>/2020/02/27/1.1%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><h1 id="计算机网络基本概念"><a href="#计算机网络基本概念" class="headerlink" title="计算机网络基本概念"></a>计算机网络基本概念</h1><p><strong>定义</strong>：计算机网络是<strong>互连</strong>的、<strong>自治</strong>的计算机集合。</p><ul><li><p><strong>自治</strong>-无主从关系</p></li><li><p><strong>互连</strong>-互联互通</p><p>通过交换网络互连主机</p></li></ul><p>计算机网络：</p><p>​ 主机 &lt;- - - - -&gt; 交换网络（由交换节点组成（路由器或交换机））&lt;- - - - &gt;主机</p><h2 id="什么是Internet"><a href="#什么是Internet" class="headerlink" title="什么是Internet?"></a>什么是Internet?</h2><h3 id="A-从组成细节角度"><a href="#A-从组成细节角度" class="headerlink" title="A.从组成细节角度"></a>A.从组成细节角度</h3><p>全球最大的<strong>互联网络</strong></p><ul><li>ISP网络互连的“<strong>网络之网络</strong>”</li><li>数以百万计的互连的<strong>计算设备</strong>集合<ul><li><strong>主机</strong>（hosts）= <strong>端系统</strong>（end system）</li><li>运行各种网络应用</li></ul></li><li><strong>通信链路</strong><ul><li>光线，铜缆，无线电，卫星。。。</li></ul></li><li><strong>分组交换</strong>：转发分组（数据包）<ul><li><strong>路由器</strong>（routers）和<strong>交换机</strong>（switches）</li></ul></li></ul><h3 id="B-从服务角度"><a href="#B-从服务角度" class="headerlink" title="B.从服务角度"></a>B.从服务角度</h3><ul><li><strong>为网络应用提供通信服务的通信基础设施</strong>:<ul><li>Web,VoIP,email,网络游戏，电子商务，社交网络。。。</li></ul></li><li><strong>为网络应用提供应用编程接口（API）</strong>:<ul><li>支持应用程序“连接”Internet，发送/接收数据</li><li>提供类似与邮政系统的数据传输服务</li></ul></li></ul><h2 id="什么是网络协议？-协议是计算机网络有序运行的重要保证"><a href="#什么是网络协议？-协议是计算机网络有序运行的重要保证" class="headerlink" title="什么是网络协议？(协议是计算机网络有序运行的重要保证)"></a>什么是网络协议？(<strong>协议是计算机网络有序运行的重要保证</strong>)</h2><p><strong>网络协议</strong>（<strong>协议</strong>）是进行网络中的数据交换而建立的规则，标准或约定</p><p><strong>协议</strong>规定了通信实体之间所交换的消息的<strong>格式，意义，顺序</strong>以及针对信息或发生的时间所采取的“<strong>动作</strong>”</p><ul><li>硬件（主机，路由器，通信链路等）是计算机网络的基础</li><li>计算机网络中的数据交换遵守事先约定好的<strong>规则</strong></li></ul><p>（<strong><em>任何通信或信息交换过程都需要规则</em></strong>）</p><h4 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信:"></a>网络通信:</h4><ul><li><p>通信主体是“机器”而不是人</p></li><li><p>交换“电子化”或“数字化”消息</p></li><li><p>计算机网络的所有通信过程都遵守某种/些规则-<strong>协议</strong></p></li></ul><h4 id="协议的三要素："><a href="#协议的三要素：" class="headerlink" title="协议的三要素："></a>协议的三要素：</h4><pre><code>1. **语法**（Syntax）
- 数据与控制信息的结构或格式
- 信号电平
2.  **语义**（Semantics）
- 需要发出何种控制信息
- 完成何种动作以及做出何种响应
- 差错控制
3. **时序**（Timing）
- 事件顺序
- 速度匹配</code></pre><h3 id="协议是计算机网络的重要内容"><a href="#协议是计算机网络的重要内容" class="headerlink" title="协议是计算机网络的重要内容"></a>协议是计算机网络的重要内容</h3><ol><li><p><em>协议规范了网络中所有信息发送和接收过程</em></p><ul><li><em>e.g.，TCP，IP，HTTP，Skype，802.11</em></li></ul></li><li><p><em>学习网络的重要内容之一</em></p></li><li><p><em>网络创新的表现形式之一</em></p></li><li><p><em>Internet协议标准</em></p><ul><li><em>RFC：Request for Comments</em></li><li><em>IETF： 互联网工程任务组(Internet Engineering Task Force)</em></li></ul></li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-Connect-MySQL</title>
    <url>/2020/01/07/Java-Connect-MySQL/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><h1 id="Java连接MySQL"><a href="#Java连接MySQL" class="headerlink" title="Java连接MySQL"></a>Java连接MySQL</h1><h2 id="1-下载驱动包"><a href="#1-下载驱动包" class="headerlink" title="1.下载驱动包"></a>1.下载驱动包</h2><p>​ 根据自己的MySQL版本下载对应的驱动包，连接:<a href="http://pan.baidu.com/s/14WyzeMuvobNbezlBpR6-dQ" target="_blank" rel="noopener">百度网盘</a></p><h2 id="2-在java中导入驱动包并添加至构建路径"><a href="#2-在java中导入驱动包并添加至构建路径" class="headerlink" title="2.在java中导入驱动包并添加至构建路径"></a>2.在java中导入驱动包并添加至构建路径</h2><ol><li>新建项目，包，类（这个我就不说了）</li><li>在该项目下新建文件夹，将下载的驱动包复制粘贴到该文件夹下</li><li>点击粘贴好的驱动包右键选择添加至构建路径</li></ol><h2 id="3-测试连接"><a href="#3-测试连接" class="headerlink" title="3.测试连接"></a>3.测试连接</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// MySQL 8.0 以下版本 - JDBC 驱动名及数据库 URL</span></span><br><span class="line">	</span><br><span class="line">    <span class="comment">//static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";  </span></span><br><span class="line">    <span class="comment">//static final String DB_URL = "jdbc:mysql://localhost:3306/user_data";</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">// MySQL 8.0 以上版本 - JDBC 驱动名及数据库 URL</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String JDBC_DRIVER = <span class="string">"com.mysql.cj.jdbc.Driver"</span>;  </span><br><span class="line"><span class="comment">//    static final String DB_URL = "jdbc:mysql://127.0.0.1:3306/user_data?/useSSL=false&amp;serverTimezone=UTC";</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String DB_URL = <span class="string">"jdbc:mysql://127.0.0.1:3306/user_data?&amp;serverTimezone=UTC"</span>;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数据库的用户名与密码，需要根据自己的设置</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String USER = <span class="string">"root"</span>;<span class="comment">//这里面填自己的数据库管理员用户名</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String PASS = <span class="string">"123456"</span>;<span class="comment">//这里面填自己的数据库密码</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// 注册 JDBC 驱动</span></span><br><span class="line">            Class.forName(JDBC_DRIVER);</span><br><span class="line">        </span><br><span class="line">            <span class="comment">// 打开链接</span></span><br><span class="line">            System.out.println(<span class="string">"连接数据库..."</span>); </span><br><span class="line">            conn = DriverManager.getConnection(DB_URL,USER,PASS);</span><br><span class="line">        </span><br><span class="line">            <span class="comment">// 执行查询</span></span><br><span class="line">            System.out.println(<span class="string">" 实例化Statement对象..."</span>);</span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line">            String sql;</span><br><span class="line">            sql = <span class="string">"SELECT * FROM student "</span>;</span><br><span class="line">            ResultSet rs = stmt.executeQuery(sql);</span><br><span class="line">        </span><br><span class="line">            <span class="comment">// 展开结果集数据库</span></span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                <span class="comment">// 通过字段检索</span></span><br><span class="line">                <span class="keyword">int</span> uid  = rs.getInt(<span class="string">"uid"</span>);</span><br><span class="line">                String name = rs.getString(<span class="string">"user_name"</span>);</span><br><span class="line">                String user_login_name = rs.getString(<span class="string">"user_login_Name"</span>);</span><br><span class="line">                String user_login_pwd = rs.getString(<span class="string">"user_login_Pwd"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 输出数据</span></span><br><span class="line">                System.out.print(<span class="string">"UID: "</span> + uid);</span><br><span class="line">                System.out.print(<span class="string">" user_name:"</span>+ name);</span><br><span class="line">                System.out.print(<span class="string">" user_login_Name: "</span> + user_login_name);</span><br><span class="line">                System.out.println(<span class="string">" user_login_Pwd: "</span>+ user_login_pwd);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 完成后关闭</span></span><br><span class="line">            rs.close();</span><br><span class="line">            stmt.close();</span><br><span class="line">            conn.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SQLException se)&#123;</span><br><span class="line">            <span class="comment">// 处理 JDBC 错误</span></span><br><span class="line">            se.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            <span class="comment">// 处理 Class.forName 错误</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="comment">// 关闭资源</span></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(stmt!=<span class="keyword">null</span>) stmt.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span>(SQLException se2)&#123;</span><br><span class="line">            &#125;<span class="comment">// 什么都不做</span></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(conn!=<span class="keyword">null</span>) conn.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span>(SQLException se)&#123;</span><br><span class="line">                se.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Goodbye!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello, I am</title>
    <url>/2020/01/07/hello-world/</url>
    <content><![CDATA[<!-- build time:Wed Mar 18 2020 17:32:08 GMT+0800 (GMT+08:00) --><p>Welcome to Qing-Bei’s blog!</p><p>I am Qing-Bei, a contemporary college student and future programmer who loves programming and mining various technologies.I hope to find the answer in my heart through my own efforts.</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Hello</category>
      </categories>
      <tags>
        <tag>Hello World！</tag>
      </tags>
  </entry>
</search>
